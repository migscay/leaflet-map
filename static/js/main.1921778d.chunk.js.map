{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","fetch","then","res","json","response","console","log","catch","status","reverseGeocodingWithGoogle","App","MapContainer","center","zoom","TileLayer","url","attribution","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,I,mCCmBRA,UAAUC,YAafD,UAAUC,YAAYC,oBATtB,SAAiBC,GACf,IAAIC,EAAYD,EAASE,OAAOD,SAC5BE,EAAYH,EAASE,OAAOC,WApBpC,SAAoCF,EAAUE,GAC5CC,MAAM,oEAAD,OACQH,EADR,YACoBE,EADpB,mDAEJE,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAK,SAAAG,GACFC,QAAQC,IAAI,yBAA0BF,MAExCG,OAAM,SAAAC,GACJH,QAAQC,IAAI,sCAAuCE,MAarDC,CAA2BV,EAAWF,GACtCQ,QAAQC,IAAR,sBAA2BT,EAA3B,2BAAsDE,OAExD,WACEM,QAAQC,IAAI,uCAVbD,QAAQC,IAAI,gDA8BAI,MAbf,WACE,OAIE,aAHA,CAGCC,EAAA,EAAD,CAAcC,OAAQ,EAAE,WAAY,oBAAqBC,KAAM,GAA/D,SACA,cAACC,EAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,8ECjCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1921778d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { MapContainer, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\n\nfunction reverseGeocodingWithGoogle(latitude, longitude) {\n  fetch(`https://maps.googleapis.com/maps/api/geocode/json?\n      latlng=${latitude},${longitude}&key={AIzaSyACgrYtHS-28GQj_N0OsB7ELo6bUMNlZKE}`)\n  .then( res => res.json())\n  .then(response => {\n      console.log(\"User's Location Info: \", response)\n   })\n   .catch(status => {\n      console.log('Request failed.  Returned status of', status)\n   })\n}\n\n// Excerpt from https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API\nfunction geoFindMe() {\n  if (!navigator.geolocation){\n   console.log(\"Geolocation is not supported by your browser\");\n    return;\n  }\n  function success(position) {\n    var latitude  = position.coords.latitude;\n    var longitude = position.coords.longitude;\n    reverseGeocodingWithGoogle(longitude, latitude);\n    console.log(`latitude is ${latitude}, longtitude is ${longitude}`);\n  }\n  function error() {\n    console.log(\"Unable to retrieve your location\");\n  }\n  navigator.geolocation.getCurrentPosition(success, error);\n}\n\ngeoFindMe();\n\nfunction App() {\n  return (\n    // <MapContainer center={[45.4, -75.7]} zoom={12}>\n    // <MapContainer center={[latitude, longitude]} zoom={12}>\n    // <MapContainer center={[150.70539109999999, -33.7478729]} zoom={12}>\n    <MapContainer center={[-33.7478729, 150.70539109999999]} zoom={12}>\n    <TileLayer\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n    />\n  </MapContainer>  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}